import { ref, shallowRef } from 'vue';
import BaseBreadcrumb from '@/components/shared/BaseBreadcrumb.vue';
import UiParentCard from '@/components/shared/UiParentCard.vue';

const page = ref({ title: '원자재검수조회' });
const breadcrumbs = shallowRef([
  {
    title: '자재',
    disabled: true,
    href: '#'
  },
  {
    title: '자재발주서 등록',
    disabled: false,
    href: '#'
  }
]);

import { reactive, computed } from 'vue';

interface Item {
  name: string;
  code: string;
  qty: number;
  spec: string;
  unit: string;
  price: number;
  note: string;
  amount?: number;
}

interface FormType {
  supplier: string;
  contact: string;
  issueNumber: string;
  orderDate: string;
  dueDate: string;
  manager: string;
  items: Item[];
}

const form = reactive<FormType>({
  supplier: '',
  contact: '',
  issueNumber: '',
  orderDate: '',
  dueDate: '',
  manager: '',
  items: [
    { name: '', code: '', qty: 0, spec: '', unit: '', price: 0, note: '', amount: 0 },
    { name: '', code: '', qty: 0, spec: '', unit: '', price: 0, note: '', amount: 0 },
    { name: '', code: '', qty: 0, spec: '', unit: '', price: 0, note: '', amount: 0 }
  ]
});

const totalAmount = computed(() => form.items.reduce((sum, item) => sum + item.qty * item.price, 0));

function calculateAmount(index: number): void {
  const item = form.items[index];
  item.amount = item.qty * item.price;
}

function onQtyInput(index: number) {
  const item = form.items[index];
  if (item.qty < 0) {
    item.qty = 0;
  }
  calculateAmount(index);
}

function resetForm(): void {
  form.supplier = '';
  form.contact = '';
  form.orderDate = '';
  form.dueDate = '';
  form.manager = '';
  form.items.forEach((item) => {
    Object.assign(item, {
      name: '',
      code: '',
      qty: 0,
      spec: '',
      unit: '',
      price: 0,
      note: '',
      amount: 0
    });
  });
}

function submitForm(): void {
  console.log('제출된 폼:', JSON.stringify(form, null, 2));
  alert('폼 제출 성공');
}